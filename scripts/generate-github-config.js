import fs from 'fs';
import path from 'path';
import yaml from 'js-yaml';

function generateGitHubConfig() {
  // 显示帮助信息
  if (process.argv.includes('--help') || process.argv.includes('-h')) {
    console.log(`
Usage: node generate-github-config.js [options]

Options:
  --config=<path>    Path to configuration file (default: ./yaal.config.yaml)
  --readme=<path>    Path to README file (default: ./README.md)
  --help, -h         Show this help message

Examples:
  node generate-github-config.js
  node generate-github-config.js --config=./config.yaml
  node generate-github-config.js --config=./config.yaml --readme=./docs/README.md
`);
    return;
  }

  try {
    // 解析命令行参数
    const args = process.argv.slice(2);
    let configPath = path.resolve(process.cwd(), 'yaal.config.yaml');
    let readmePath = path.resolve(process.cwd(), 'README.md');

    // 解析命名参数
    for (let i = 0; i < args.length; i++) {
      const arg = args[i];
      if (arg.startsWith('--config=')) {
        configPath = path.resolve(arg.split('=')[1]);
      } else if (arg.startsWith('--readme=')) {
        readmePath = path.resolve(arg.split('=')[1]);
      }
    }

    if (!fs.existsSync(configPath)) {
      console.error(
        `❌ yaal.config.yaml not found at: ${configPath}. Please create this file with your GitHub repository URL.`
      );
      process.exit(1);
    }

    const configContent = fs.readFileSync(configPath, 'utf8');
    const config = yaml.load(configContent) || {};

    if (!config.github) {
      console.error(
        '❌ GitHub URL not found in yaal.config.yaml. Please add "github: https://github.com/owner/repo"'
      );
      process.exit(1);
    }

    const url = config.github;
    const match = url.match(/github\.com\/([^\/]+)\/([^\/]+)/);

    if (!match) {
      console.error(
        `❌ Invalid GitHub URL format: ${url}. Expected: https://github.com/owner/repo`
      );
      process.exit(1);
    }

    const owner = match[1];
    const repo = match[2].replace(/\.git$/, '');

    // 从 README 解析标题
    let title = repo;
    try {
      if (fs.existsSync(readmePath)) {
        const readmeContent = fs.readFileSync(readmePath, 'utf8');
        const titleMatch = readmeContent.match(/^#\s+(.+)$/m);
        if (titleMatch) {
          title = titleMatch[1].trim();
        }
      } else {
        console.warn(
          `⚠️ README.md not found at ${readmePath}, using repo name as title`
        );
      }
    } catch (error) {
      console.warn(
        `⚠️ Failed to read README.md: ${error.message}, using repo name as title`
      );
    }

    const outputContent = `// This file is auto-generated by scripts/generate-github-config.js
// Do not edit this file directly. Edit yaal.config.yaml instead.

export const githubConfig = {
  url: '${url}',
  owner: '${owner}',
  repo: '${repo}',
  title: '${title}',
  description: 'A meta awesome list of awesome lists'
};

export const siteConfig = {
  title: '${title}',
  description: 'A meta awesome list of awesome lists',
  url: 'https://${owner}.github.io/${repo}/'
};
`;

    fs.writeFileSync(
      path.join(process.cwd(), 'lib', 'githubConfig.ts'),
      outputContent
    );

    console.log(`✅ GitHub configuration generated:
   Repository: ${owner}/${repo}
   URL: ${url}`);
  } catch (error) {
    console.error(
      `❌ Failed to generate GitHub configuration: ${error.message}`
    );
    process.exit(1);
  }
}

generateGitHubConfig();
