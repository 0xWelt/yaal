import fs from 'fs';
import path from 'path';
import yaml from 'js-yaml';

function generateGitHubConfig() {
  try {
    const configPath = path.join(process.cwd(), 'yaal.config.yaml');

    if (!fs.existsSync(configPath)) {
      console.error(
        '❌ yaal.config.yaml not found. Please create this file with your GitHub repository URL.'
      );
      process.exit(1);
    }

    const configContent = fs.readFileSync(configPath, 'utf8');
    const config = yaml.load(configContent) || {};

    if (!config.github) {
      console.error(
        '❌ GitHub URL not found in yaal.config.yaml. Please add "github: https://github.com/owner/repo"'
      );
      process.exit(1);
    }

    const url = config.github;
    const match = url.match(/github\.com\/([^\/]+)\/([^\/]+)/);

    if (!match) {
      console.error(
        `❌ Invalid GitHub URL format: ${url}. Expected: https://github.com/owner/repo`
      );
      process.exit(1);
    }

    const owner = match[1];
    const repo = match[2].replace(/\.git$/, '');

    // 从 README 解析标题
    const readmePath = process.env.README_PATH || './README.md';
    const readmeContent = fs.readFileSync(readmePath, 'utf8');
    const titleMatch = readmeContent.match(/^#\s+(.+)$/m);
    const title = titleMatch ? titleMatch[1].trim() : repo;

    const outputContent = `// This file is auto-generated by scripts/generate-github-config.js
// Do not edit this file directly. Edit yaal.config.yaml instead.

export const githubConfig = {
  url: '${url}',
  owner: '${owner}',
  repo: '${repo}',
  title: '${title}',
  description: 'A meta awesome list of awesome lists'
};

export const siteConfig = {
  title: '${title}',
  description: 'A meta awesome list of awesome lists',
  url: 'https://${owner}.github.io/${repo}/'
};
`;

    fs.writeFileSync(
      path.join(process.cwd(), 'lib', 'githubConfig.ts'),
      outputContent
    );

    console.log(`✅ GitHub configuration generated:
   Repository: ${owner}/${repo}
   URL: ${url}`);
  } catch (error) {
    console.error(
      `❌ Failed to generate GitHub configuration: ${error.message}`
    );
    process.exit(1);
  }
}

generateGitHubConfig();
